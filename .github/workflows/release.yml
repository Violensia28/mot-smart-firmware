name: Release (ESP32 full)

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install platformio

      - name: Locate PlatformIO project dir
        id: pio
        run: |
          set -e
          FILE="$(git ls-files | grep -m1 -E '^.*platformio\.ini$' || true)"
          if [ -z "$FILE" ]; then
            echo "ERROR: platformio.ini not found." >&2
            exit 1
          fi
          DIR="$(dirname "$FILE")"
          echo "dir=$DIR" >> "$GITHUB_OUTPUT"
          echo "Found platformio.ini at: $DIR"

      - name: Show env list
        working-directory: ${{ steps.pio.outputs.dir }}
        run: pio run -t envlist || true

      # GANTI 'full-esp32dev' kalau env "full" kamu namanya lain
      - name: Build full ESP32
        working-directory: ${{ steps.pio.outputs.dir }}
        run: pio run -e full-esp32dev

      - name: Prepare release assets
        id: prep
        working-directory: ${{ steps.pio.outputs.dir }}
        run: |
          set -e
          mkdir -p dist
          cp .pio/build/*/bootloader*.bin dist/bootloader.bin 2>/dev/null || true
          cp .pio/build/*/partitions*.bin dist/partitions.bin 2>/dev/null || true
          cp .pio/build/*/firmware.bin    dist/firmware.bin

          cat > dist/offsets.txt <<'EOF'
# ESP32 flash offsets (default)
bootloader.bin  @ 0x1000
partitions.bin  @ 0x8000
firmware.bin    @ 0x10000
# Pastikan cocok dengan partition table & varian board kamu.
EOF

          cat > dist/readme_android.md <<'EOF'
# Flash dari Android (USB-OTG)
1) Install **ESP32_flash** (Play Store).
2) Hubungkan ESP32 ke Android via OTG. Masuk bootloader (tahan BOOT, tekan-lepas EN/RST, lepas BOOT).
3) Flash 3 file dengan offset:
   - bootloader.bin → 0x1000
   - partitions.bin → 0x8000
   - firmware.bin   → 0x10000

# Update OTA (opsional)
Jika firmware “full” sudah punya OTA handler dan partisi OTA, upload `firmware.bin` saja via Web UI/OTA app.
EOF

          (cd dist && sha256sum * > SHA256SUMS.txt)
          ZIP="motsmart_full_esp32_${GITHUB_REF_NAME#refs/tags/}.zip"
          (cd dist && zip -9 ../$ZIP *)
          echo "zipname=$ZIP" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "mot-smart-firmware ${{ github.ref_name }} (ESP32 full)"
          files: |
            ${{ steps.pio.outputs.dir }}/${{ steps.prep.outputs.zipname }}
            ${{ steps.pio.outputs.dir }}/dist/SHA256SUMS.txt
